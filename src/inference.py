import pandas as pd
import joblib

# Load trained model
model = joblib.load("C:\\Users\pc\Dropbox\PC\Desktop\Home-price-predictor\models\home_price_model.pkl")

# Create sample input with ALL features (fill unknown with defaults)
sample_data = {
    'MSSubClass': [20],
    'MSZoning': ['RL'],
    'LotFrontage': [80],
    'LotArea': [9600],
    'Street': ['Pave'],
    'Alley': [None],
    'LotShape': ['Reg'],
    'LandContour': ['Lvl'],
    'Utilities': ['AllPub'],
    'LotConfig': ['Inside'],
    'LandSlope': ['Gtl'],
    'Neighborhood': ['CollgCr'],
    'Condition1': ['Norm'],
    'Condition2': ['Norm'],
    'BldgType': ['1Fam'],
    'HouseStyle': ['2Story'],
    'OverallQual': [7],
    'OverallCond': [5],
    'YearBuilt': [2003],
    'YearRemodAdd': [2003],
    'RoofStyle': ['Gable'],
    'RoofMatl': ['CompShg'],
    'Exterior1st': ['VinylSd'],
    'Exterior2nd': ['VinylSd'],
    'MasVnrType': ['BrkFace'],
    'MasVnrArea': [196],
    'ExterQual': ['Gd'],
    'ExterCond': ['TA'],
    'Foundation': ['PConc'],
    'BsmtQual': ['Gd'],
    'BsmtCond': ['TA'],
    'BsmtExposure': ['No'],
    'BsmtFinType1': ['GLQ'],
    'BsmtFinSF1': [706],
    'BsmtFinType2': ['Unf'],
    'BsmtFinSF2': [0],
    'BsmtUnfSF': [150],
    'TotalBsmtSF': [856],
    'Heating': ['GasA'],
    'HeatingQC': ['Ex'],
    'CentralAir': ['Y'],
    'Electrical': ['SBrkr'],
    '1stFlrSF': [856],
    '2ndFlrSF': [854],
    'LowQualFinSF': [0],
    'GrLivArea': [1710],
    'BsmtFullBath': [1],
    'BsmtHalfBath': [0],
    'FullBath': [2],
    'HalfBath': [1],
    'BedroomAbvGr': [3],
    'KitchenAbvGr': [1],
    'KitchenQual': ['Gd'],
    'TotRmsAbvGrd': [7],
    'Functional': ['Typ'],
    'Fireplaces': [1],
    'FireplaceQu': ['TA'],
    'GarageType': ['Attchd'],
    'GarageYrBlt': [2003],
    'GarageFinish': ['RFn'],
    'GarageCars': [2],
    'GarageArea': [548],
    'GarageQual': ['TA'],
    'GarageCond': ['TA'],
    'PavedDrive': ['Y'],
    'WoodDeckSF': [0],
    'OpenPorchSF': [61],
    'EnclosedPorch': [0],
    '3SsnPorch': [0],
    'ScreenPorch': [0],
    'PoolArea': [0],
    'PoolQC': [None],
    'Fence': [None],
    'MiscFeature': [None],
    'MiscVal': [0],
    'MoSold': [2],
    'YrSold': [2008],
    'SaleType': ['WD'],
    'SaleCondition': ['Normal']
}

sample_df = pd.DataFrame(sample_data)

# Predict
prediction = model.predict(sample_df)
print("üè° Predicted House Price:", prediction[0])
